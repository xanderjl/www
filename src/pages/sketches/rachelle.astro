---
import { capitalCase } from 'change-case'

import Sketch from '@/components/Sketch.astro'
import Layout from '@/layouts/Layout.astro'

export const prerender = true

const { pathname } = Astro.url
const title = capitalCase(pathname.split('/').pop() ?? '')
---

<script>
  import { sketch } from '@/utils/p5'
  import type { Draw } from '@/utils/p5'
  import type P5 from 'p5'

  type Coordinates = [number, number, string]

  const poem: string[] = [
    'We went to the coffee shop, where',
    'I walked up and introduced myself, I was afraid that he might run away',
    'It made me weirdly sad to imagine',
    'like-minded oddballs and',
    'capacities for empathy and warmth',
    'pinpoints in a greater darkness,',
    'tells this metaphysical love story',
    'desired by a ghost, who inhabits',
    'a house in rural upstate New York, with a',
    'human skeleton on a shelf in the basement.',
    'took a break to watch a movie together.',
    'Time moves whether we want it to or not.',
    'The moon lit up the mountains as I drove to the valley below.',
    'Big Husband.',
    '"He\'s sleepy',
    'But I want to see him.',
    '"I hope that I was able to help you'
  ]

  const noiseMap = (
    p5: P5,
    noiseValues: [number, number?, number?],
    minMax: [number, number]
  ) => p5.map(p5.noise(...noiseValues), 0, 1, minMax[0], minMax[1])

  const initialCoordinates = (
    p5: P5,
    poem: string[],
    margin: number
  ): Coordinates[] =>
    poem.map((string, i) => [
      noiseMap(
        p5,
        [string.length * i, p5.width - margin],
        [margin, (p5.width - margin) * 0.5]
      ),
      noiseMap(
        p5,
        [string.length * i, p5.height - margin * 2],
        [margin, (p5.height - margin) * 0.5]
      ),
      string
    ])

  const shape = (p5: P5, x: number, y: number, sMod = 1) => {
    const array = Array.from({ length: sMod })
    array.forEach((_, i) => {
      const xPos = x + i * 10
      const yPos = y + i * 10
      const w = noiseMap(p5, [x * i, y * i], [10, 100])
      const h = i * sMod * 0.1
      p5.rect(xPos, yPos, w, h)
    })
  }

  const dimensions: number[] = [1200, 1200]
  const padding: number[] = [40]
  const background = [255, 253, 252]

  const poemString = poem.join()
  const marginRatio = 0.05
  const seed = 12341234
  let coordinates
  let margin = 0

  const draw: Draw = p5 => {
    p5.background(220)
    p5.ellipse(50, 50, 80, 80)
  }

  sketch({ draw, dimensions, padding, background })
</script>
<Layout {title}>
  <Sketch />
</Layout>
