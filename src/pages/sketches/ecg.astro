---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

export const prerender = true;

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { getDimensions, sketch } from "@/utils/p5";
  import type { Draw, Setup, WindowResized } from "@/utils/p5";
  import type P5 from "p5";
  import data from "@/assets/data/ecg_2021-08-24.json";

  const dimensions: number[] = getDimensions("A4");
  const padding: number[] = [40];
  const background = [255, 253, 252];
  let table: number[][] = [];
  let margin: number;

  const handleRenders = (p5: P5) => {
    margin = p5.width * 0.05;

    const max = data.reduce((a, b) => Math.max(a, b));
    const min = data.reduce((a, b) => Math.min(a, b));

    table = data.map((n, i) => {
      const rand = p5.random(n);
      const x = p5.map(
        p5.noise(rand, i),
        0,
        1,
        margin,
        p5.width - margin,
        true,
      );
      const y = p5.map(
        p5.noise(rand, i, min),
        0,
        1,
        margin,
        p5.height - margin,
        true,
      );

      return [x, y];
    });
  };

  const setup: Setup = (p5) => handleRenders(p5);
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    p5.clear(0, 0, 0, 0);
    p5.frameRate(1);
    p5.fill(0);

    table.forEach(([x, y]) => {
      p5.circle(x, y, p5.width * 0.0015);
    });
  };

  sketch({
    setup,
    draw,
    windowResized,
    dimensions,
    padding,
    saveAs: "png",
    suffix: "ecg",
    seed: 1,
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
