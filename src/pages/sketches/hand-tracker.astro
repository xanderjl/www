---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { getDimensions, sketch } from "@/utils/p5";
  import type { Draw, Setup, WindowResized } from "@/utils/p5";
  import type P5 from "p5";
  import clm from "clmtrackr";

  const dimensions: number[] = getDimensions("square");
  const padding: number[] = [16];
  const background = [255, 253, 252];
  let margin: number;
  let capture: P5.Element;
  let tracker: clm.tracker;
  let graphics: P5.Graphics;
  let captureWidth: number;
  let captureHeight: number;
  let positions: [number, number][] | false;

  const handleRenders = (p5: P5) => {
    margin = p5.width * 0.075;
    captureWidth = p5.width - margin * 2;
    captureHeight = (p5.width - margin * 2) * (capture.height / capture.width);
  };

  const setup: Setup = (p5) => {
    capture = p5.createCapture({
      audio: false,
      video: {
        mandatory: {
          maxHeight: p5.height,
          maxWidth: p5.width,
        },
        optional: [{ maxFrameRate: 60 }],
      },
    });
    capture.hide();
    graphics = p5.createGraphics(capture.width, capture.height);

    tracker = new clm.tracker();
    tracker.init();
    tracker.start(capture.elt);

    handleRenders(p5);
  };
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    // p5.clear(0, 0, 0, 0);
    p5.background(background);

    p5.image(
      capture,
      margin,
      margin + captureHeight * 0.33,
      captureWidth,
      captureHeight,
    );
    p5.image(
      graphics,
      margin,
      margin + captureHeight * 0.33,
      captureWidth,
      captureHeight,
    );

    // positions = tracker.getCurrentPosition();
    // console.log(positions);
  };

  sketch({
    setup,
    windowResized,
    draw,
    dimensions,
    padding,
    saveAs: "png",
    suffix: "hand-tracker",
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
