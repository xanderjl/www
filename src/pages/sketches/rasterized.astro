---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

export const prerender = true;

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { createGrid, sketch, getDimensions } from "@/utils/p5";
  import type { Draw, Preload, Setup, WindowResized } from "@/utils/p5";
  import type P5 from "p5";

  import headshot from "@/assets/images/headshot.jpg";

  const dimensions: number[] = getDimensions("A4");
  const padding: number[] = [40];
  let img: P5.Image;
  let res: number;
  let ri: number;
  let rs: number;
  let iw: number;
  let ih: number;
  let margin: number;
  let rows: number;
  let cols: number;

  const preload: Preload = (p5) => {
    img = p5.loadImage(headshot.src);
    img.resize(headshot.width, headshot.height);
  };

  let grid: number[][] = [];

  const handleRenders = (p5: P5) => {
    margin = p5.width * 0.085;
    res = p5.width * 0.0875;

    ri = img.width / img.height;
    rs = p5.width / p5.height;
    iw =
      rs > ri
        ? img.width * (p5.height / img.height) - margin * 4
        : p5.width - margin * 4;
    ih =
      rs > ri
        ? p5.height - margin * 4
        : img.height * (p5.width / img.width) - margin * 4;

    rows = Math.floor(res);
    cols = Math.floor(res);
    grid = createGrid(rows, cols).map(([u, v]) => {
      const mx = p5.lerp(0, iw, u);
      const my = p5.lerp(0, ih, v);
      const ix = p5.map(mx, 0, iw, 0, img.width);
      const iy = p5.map(my, 0, ih, 0, img.height);
      const c = p5.brightness(img.get(ix, iy));
      const x = p5.lerp(margin, p5.width - margin, u);
      const y = p5.lerp(margin, p5.height - margin, v);

      return [x, y, c];
    });
  };

  const setup: Setup = (p5) => handleRenders(p5);
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    p5.clear(0, 0, 0, 0);
    p5.frameRate(1);
    p5.fill(0);

    grid.forEach(([x, y, c]) => {
      const w = p5.map(c, 0, 255, res * 0.1875, 0);
      p5.circle(x, y, w);
    });
  };

  sketch({
    preload,
    setup,
    draw,
    windowResized,
    dimensions,
    padding,
    saveAs: "svg",
    suffix: "rasterized",
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
