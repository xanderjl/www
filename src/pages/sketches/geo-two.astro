---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

export const prerender = true;

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { getDimensions, sketch, getGeoData } from "@/utils/p5";
  import type {
    Draw,
    Preload,
    GeoJSON,
    Setup,
    WindowResized,
  } from "@/utils/p5";
  import type { LineString } from "geojson";
  import type P5 from "p5";

  const dimensions: number[] = getDimensions("A4");
  const padding: number[] = [40];
  const background = [255, 253, 252];
  let data: GeoJSON;
  let coordinates: LineString["coordinates"];
  let minXCoord: number;
  let maxXCoord: number;
  let minYCoord: number;
  let maxYCoord: number;
  let minZCoord: number;
  let maxZCoord: number;
  let margin: number;

  const preload: Preload = (p5) => {
    data = p5.loadJSON("/data/geo/route_2019-10-05_7.38am.geojson") as GeoJSON;
  };

  const handleRenders = (p5: P5) => {
    const {
      coordinates: c,
      minX,
      maxX,
      minY,
      maxY,
      minZ,
      maxZ,
    } = getGeoData(data);
    coordinates = c;
    minXCoord = minX;
    maxXCoord = maxX;
    minYCoord = minY;
    maxYCoord = maxY;
    minZCoord = minZ;
    maxZCoord = maxZ;
    margin = p5.width * 0.075;
  };

  const setup: Setup = (p5) => handleRenders(p5);
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    p5.clear(0, 0, 0, 0);
    p5.background(background);

    p5.push();
    p5.noFill();
    p5.beginShape();
    coordinates.forEach((c, i) => {
      const long = c[0];
      const lat = c[1];
      const elev = c[2];

      const x = p5.map(long, minXCoord, maxXCoord, margin, p5.width - margin);
      const y = p5.map(lat, minYCoord, maxYCoord, margin, p5.height - margin);
      const z = p5.map(elev, minZCoord, maxZCoord, 0, 100);

      p5.vertex(x, y);
    });
    p5.endShape();
    p5.pop();
  };

  sketch({
    preload,
    setup,
    windowResized,
    draw,
    dimensions,
    padding,
    saveAs: "png",
    suffix: "geo-two",
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
