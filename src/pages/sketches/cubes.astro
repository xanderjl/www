---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { getDimensions, sketch, createGrid } from "@/utils/p5";
  import type { Draw, Setup, WindowResized } from "@/utils/p5";
  import type P5 from "p5";

  const dimensions: number[] = getDimensions("A4");
  const padding: number[] = [40];
  const background = [255, 253, 252];
  let grid: number[][];
  let margin: number;

  const handleRenders = (p5: P5) => {
    margin = p5.width * 0.075;
    grid = createGrid(15).map(([u, v]) => {
      const x = p5.map(
        u,
        0,
        1,
        -p5.width * 0.5 + margin,
        p5.width * 0.5 - margin,
      );
      const y = p5.map(
        v,
        0,
        1,
        -p5.height * 0.5 + margin,
        p5.height * 0.5 - margin,
      );

      return [x, y];
    });
  };

  const setup: Setup = (p5) => handleRenders(p5);
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    p5.clear(0, 0, 0, 0);
    p5.background(background);

    p5.push();
    p5.fill(background);
    grid.forEach(([x, y]) => {
      p5.push();
      p5.translate(x, y);
      p5.box();
      p5.pop();
    });
    p5.pop();

    p5.push();
    p5.noFill();
    p5.rect(
      -p5.width * 0.5 + margin,
      -p5.height * 0.5 + margin,
      p5.width - margin * 2,
      p5.height - margin * 2,
    );
    p5.pop();
  };

  sketch({
    setup,
    windowResized,
    draw,
    dimensions,
    padding,
    renderer: "webgl",
    saveAs: "png",
    suffix: "cubes",
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
