---
import { capitalCase } from "change-case";

import Sketch from "@/components/Sketch.astro";
import SketchLayout from "@/layouts/SketchLayout.astro";

export const prerender = true;

const { pathname } = Astro.url;
const title = capitalCase(pathname.split("/").pop() ?? "");
---

<script>
  import { getDimensions, sketch } from "@/utils/p5";
  import type { Draw, Preload, Setup, WindowResized } from "@/utils/p5";
  import type P5 from "p5";
  import type { FeatureCollection, LineString } from "geojson";

  type GeoJSON = FeatureCollection<
    LineString,
    {
      name: string;
      time: string;
      coordTimes: string[];
    }
  >;

  const dimensions: number[] = getDimensions("A4");
  const padding: number[] = [40];
  const background = [255, 253, 252];
  let data: GeoJSON;
  let coordinates: LineString["coordinates"];
  let minXCoord: number;
  let maxXCoord: number;
  let minYCoord: number;
  let maxYCoord: number;
  let cx: number;
  let cy: number;
  let margin: number;

  const handleRenders = (p5: P5) => {
    const { features } = data;
    const { geometry } = features[0];
    coordinates = geometry.coordinates;
    minXCoord = Math.min(...coordinates.map((coords) => coords[0]));
    maxXCoord = Math.max(...coordinates.map((coords) => coords[0]));
    minYCoord = Math.min(...coordinates.map((coords) => coords[1]));
    maxYCoord = Math.max(...coordinates.map((coords) => coords[1]));
    cx = p5.width * 0.5;
    cy = p5.height * 0.5;
    margin = p5.width * 0.075;
  };

  const preload: Preload = (p5) => {
    data = p5.loadJSON("/data/route_2022-10-02_6.04pm.geojson") as GeoJSON;
  };

  const setup: Setup = (p5) => handleRenders(p5);
  const windowResized: WindowResized = (p5) => handleRenders(p5);

  const draw: Draw = (p5) => {
    p5.clear(0, 0, 0, 0);
    p5.background(background);
    p5.stroke(0);
    p5.strokeWeight(p5.width * 0.0085);
    p5.noFill();

    p5.beginShape();
    coordinates.forEach((coord, i) => {
      const long = coord[0];
      const lat = coord[1];
      const x = p5.map(long, minXCoord, maxXCoord, margin, p5.width - margin);
      const y = p5.map(lat, minYCoord, maxYCoord, margin, p5.height - margin);

      if (i == 0) {
        p5.vertex(x, y);
        return;
      }
      p5.curveVertex(x, y);
    });
    p5.endShape();
  };

  sketch({
    preload,
    setup,
    windowResized,
    draw,
    dimensions,
    padding,
    saveAs: "png",
    suffix: "geo-json",
  });
</script>

<SketchLayout {title}>
  <Sketch />
</SketchLayout>
