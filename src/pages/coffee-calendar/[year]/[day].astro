---
import Layout from "@/layouts/Layout.astro";
import { getCollection, getEntry } from "astro:content";
import { H1, H2, LI } from "@/components/typography";
import { CoffeeBean } from "@/components/icons";
import { capitalCase } from "change-case";

export const prerender = true;

export const getStaticPaths = async () => {
  const collection = await getCollection("coffee-calendar");
  const paths = collection.map(({ slug: day, data: { date } }) => {
    const year = date.getFullYear().toString();

    return { params: { year, day } };
  });

  return paths;
};

const { day } = Astro.params;
const entry = await getEntry("coffee-calendar", day);
const { Content } = await entry.render();
const data = entry.data;
const dayNum = day.split("-")[1];
const dateDay = data.date.getDate().toString().padStart(2, "0");
const dateMonth = (data.date.getMonth() + 1).toString().padStart(2, "0");
const dateYear = data.date.getFullYear().toString();
const title = `${capitalCase(day)}: ${data.coffee}`;
const description = `${data.processingMethod}, ${data.bean}`;

const thStyles = "font-extrabold pb-0 md:pb-1";
const beanStyles = "absolute w-6 md:w-12 h-auto opacity-0";
---

<script>
  import { beansAnimation } from "@/animations";

  beansAnimation();
</script>

<Layout {title} {description} class="max-w-3xl">
  <div
    class="[&>div]:sm:text-md [&>div]:border-inherit light:border-gray-900 light:bg-gray-50 relative grid auto-rows-auto grid-cols-[fit-content(20ch)_repeat(4,_1fr)] gap-0 border-t-4 dark:border-gray-500 dark:bg-gray-900 [&>div]:border-1 [&>div]:p-2 [&>div]:text-xs [&>div]:md:p-4"
  >
    <div class="row-start-1 row-end-3 flex items-center justify-center">
      <H1 class="text-4xl sm:text-6xl md:text-8xl">
        {dayNum}
      </H1>
    </div>
    <div>
      <p class={thStyles}>DAY</p>
      <p>{dateDay}</p>
    </div>
    <div>
      <p class={thStyles}>MONTH</p>
      <p>{dateMonth}</p>
    </div>
    <div>
      <p class={thStyles}>YEAR</p>
      <p>{dateYear}</p>
    </div>
    <div>
      <p class={thStyles}>TIME</p>
      <p>{data.time}</p>
    </div>
    <div class="col-start-2 col-end-[-1]" })}>
      <p class={thStyles}>COFFEE</p>
      <p>
        {data.coffee}
      </p>
    </div>
    <div>
      <p class={thStyles}>WEATHER</p>
      <p>{data.weather}</p>
    </div>
    <div class="col-start-2 col-end-[-1]">
      <p class={thStyles}>ROASTER</p>
      <p>{data.roaster}</p>
    </div>
    <div>
      <p class={thStyles}>BREW METHOD</p>
      <p>{data.brewMethod}</p>
    </div>
    <div class="col-start-2 col-end-[-1]">
      <p class={thStyles}>PROCESSING METHOD</p>
      <p>{data.processingMethod}</p>
    </div>
    <div class="col-start-1 col-end-[-1]">
      <p class={thStyles}>SOUNDTRACK</p>
      <p>{data.soundtrack}</p>
    </div>
    <div class="col-start-1 col-end-[-1]">
      <p class:list={[thStyles, "pb-2"]}>NOTES</p>
      <Content components={{ h1: H1, h2: H2, li: LI }} />
    </div>
    <div>
      <p class:list={[thStyles, "whitespace-nowrap"]}>CLASSIFICATION</p>
    </div>
    <div class="col-start-2 col-end-[-1]">
      {data.classification}
    </div>
    <div>
      <p class={thStyles}>RATING</p>
    </div>
    <div class="col-start-2 col-end-[-1]">
      <p>{data.rating}</p>
    </div>
    <CoffeeBean
      id="bean1"
      class:list={[beanStyles, "right-0 -bottom-8"]}
      client:load
    />
    <CoffeeBean
      id="bean2"
      class:list={[beanStyles, "right-12 -bottom-8"]}
      client:load
    />
    <CoffeeBean
      id="bean3"
      class:list={[
        beanStyles,
        "right-6 -bottom-3 -rotate-[15deg] transform md:right-4 md:bottom-0",
      ]}
      client:load
    />
  </div>
</Layout>
