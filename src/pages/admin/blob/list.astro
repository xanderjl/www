---
import { list } from "@vercel/blob";
import { getSession } from "auth-astro/server";

import { CopyButton } from "@/components/buttons/CopyButton";
import { DeleteBlobButton } from "@/components/buttons/DeleteBlobButton";
import LoginButton from "@/components/buttons/LoginButton.astro";
import LogoutButton from "@/components/buttons/LogoutButton.astro";
import { H1 } from "@/components/typography";
import Layout from "@/layouts/Layout.astro";

export const prerender = false;

const { blobs } = await list({ token: import.meta.env.BLOB_READ_WRITE_TOKEN });
const session = await getSession(Astro.request);
---

<Layout title="VC Blob List">
  {
    session?.user?.email === import.meta.env.AUTH_EMAIL ? (
      <>
        <div class="mb-12 flex justify-between">
          <H1>Manage Files</H1>
          <LogoutButton>Sign Out</LogoutButton>
        </div>
        <table>
          <thead>
            <tr class="font-heading text-left text-2xl font-bold">
              <th>File Name</th>
              <th>File Size</th>
              <th>Uploaded At</th>
              <th>URL</th>
              <th>Download</th>
              <th>Delete</th>
            </tr>
          </thead>
          <tbody>
            {blobs.map(({ pathname, size, uploadedAt, url }) => {
              return (
                <tr>
                  <td>{pathname}</td>
                  <td>{Math.round((size / 1000) * 100) / 100}kb</td>
                  <td>{new Date(uploadedAt).toLocaleDateString("US")}</td>
                  <td class="whitespace-nowrap">
                    <CopyButton copyString={url} client:load>
                      {url.slice(0, 15) + "..."}
                    </CopyButton>
                  </td>
                  <td>
                    <a href={url}>Download</a>
                  </td>
                  <td>
                    <DeleteBlobButton
                      url={`/api/blob/delete?url=${url}`}
                      client:load
                    >
                      Delete
                    </DeleteBlobButton>
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>
      </>
    ) : (
      <>
        <H1>Fuck off :)</H1>
        <LoginButton>Sign In</LoginButton>
      </>
    )
  }
</Layout>
